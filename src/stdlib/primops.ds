
public module primops
{
    // Integer arithmetic
    public int addi(int x, int y)
    {
        return x + y;
    }
    public int subi(int x, int y)
    {
        return x - y;
    }
    public int muli(int x, int y)
    {
        return x * y;
    }
    public int divi(int x, int y)
    {
        return x / y;
    }
    public int modi(int x, int y)
    {
        return x % y;
    }

    // Integer bitwise ops
    public int ori(int x, int y)
    {
        return x | y;
    }
    public int andi(int x, int y)
    {
        return x & y;
    }
    public int xori(int x, int y)
    {
        return x ^ y;
    }
    public int shri(int x, int y)
    {
        return x >> y;
    }
    public int shli(int x, int y)
    {
        return x << y;
    }

    // Integer comparison
    public bool eqi(int x, int y)
    {
        return x == y;
    }
    public bool neqi(int x, int y)
    {
        return x != y;
    }
    public bool lti(int x, int y)
    {
        return x < y;
    }
    public bool lei(int x, int y)
    {
        return x <= y;
    }
    public bool gti(int x, int y)
    {
        return x > y;
    }
    public bool gei(int x, int y)
    {
        return x >= y;
    }

    // Boolean negation
    public bool notb(bool flag)
    {
        return !flag;
    }

    // String concatenation
    public string sconcat(string l, string r)
    {
        return l + r;
    }

    // String emptiness test
    public bool stringIsEmpty(string s)
    {
        return string.IsNullOrEmpty(s);
    }

    // Trims whitespace around the given string
    public string stringTrim(string s)
    {
        return s.Trim(null);
    }

    // Conversion functions
    public string conv_i4_s(int Value)
    {
        return Value.ToString();
    }

    public int conv_s_i4(string Value)
    {
        return int.Parse(Value);
    }

    public string conv_c_s(char Value)
    {
        return Value.ToString();
    }

    public char conv_s_c(string Value)
    {
        return char.Parse(Value);
    }
}
